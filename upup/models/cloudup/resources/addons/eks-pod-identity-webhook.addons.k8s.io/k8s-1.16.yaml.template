# sourced from https://github.com/aws/amazon-eks-pod-identity-webhook/tree/b19c295a269ad9de50b10e3a9cdc9ec1f7d48a19/deploy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-identity-webhook
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-identity-webhook
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-identity-webhook
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-identity-webhook
subjects:
- kind: ServiceAccount
  name: pod-identity-webhook
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-identity-webhook
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-identity-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-identity-webhook
subjects:
- kind: ServiceAccount
  name: pod-identity-webhook
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-identity-webhook
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pod-identity-webhook
  template:
    metadata:
      labels:
        app: pod-identity-webhook
    spec:
      serviceAccountName: pod-identity-webhook
      containers:
      - name: pod-identity-webhook
        image: amazon/amazon-eks-pod-identity-webhook:v0.4.0
        command:
        - /webhook
        - --in-cluster=false
        - --namespace=kube-system
        - --service-name=pod-identity-webhook
        - --annotation-prefix=eks.amazonaws.com
        - --token-audience=amazonaws.com
        - --logtostderr
        - --watch-config-map
        - --v=5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: cert
          mountPath: "/etc/webhook/certs"
          readOnly: true
      priorityClassName: "system-cluster-critical"
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: pod-identity-webhook
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: pod-identity-webhook
      volumes:
      - name: cert
        secret:
          secretName: pod-identity-webhook-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pod-identity-webhook
  namespace: kube-system
spec:
  secretName: pod-identity-webhook-cert
  commonName: "pod-identity-webhook.kube-system.svc"
  dnsNames:
  - "pod-identity-webhook"
  - "pod-identity-webhook.kube-system"
  - "pod-identity-webhook.kube-system.svc"
  - "pod-identity-webhook.kube-system.svc.local"
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  issuerRef:
    name: eks-pod-identity-webhook.addons.k8s.io
    kind: Issuer
---

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: pod-identity-webhook
  namespace: kube-system
  annotations:
    cert-manager.io/inject-ca-from: kube-system/pod-identity-webhook
webhooks:
- name: pod-identity-webhook.amazonaws.com
  failurePolicy: Fail
  clientConfig:
    service:
      name: pod-identity-webhook
      namespace: kube-system
      path: "/mutate"
  objectSelector:
    matchExpressions:
    - key: kops.k8s.io/managed-by
      operator: NotIn
      values:
      - kops
    - key: k8s-app
      operator: NotIn
      values:
      - kube-apiserver
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
---
apiVersion: v1
kind: Service
metadata:
  name: pod-identity-webhook
  namespace: kube-system
  annotations:
    prometheus.io/port: "443"
    prometheus.io/scheme: "https"
    prometheus.io/scrape: "true"
spec:
  ports:
  - port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: pod-identity-webhook
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pod-identity-webhook
  namespace: kube-system
  annotations:
    prometheus.io/port: "443"
    prometheus.io/scheme: "https"
    prometheus.io/scrape: "true"
data:
  config: {{ PodIdentityWebhookConfigMapData }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: pod-identity-webhook
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: pod-identity-webhook
  maxUnavailable: 50%